{"version":3,"file":"LazyLoadGaugeChart.09bb063c5d372d9f7325.bundle.js","mappings":"gLAAIA,E,wFAAmB,SAASC,EAAKC,EAAMC,EAAOC,EAAKC,GAAWL,IAAuBA,EAAqB,mBAAqBM,QAAUA,OAAOC,KAAOD,OAAOC,IAAI,kBAAoB,OAAO,IAAIC,EAAeN,GAAQA,EAAKM,aAAaC,EAAiBC,UAAUC,OAAS,EAAE,GAAIR,GAAS,IAAMM,IAAmBN,EAAQ,CAAEE,cAAU,IAAW,IAAMI,EAAgBN,EAAME,SAAWA,OAAc,GAAII,EAAiB,EAAG,CAAC,IAAK,IAAIG,EAAa,IAAIC,MAAMJ,GAAiBK,EAAI,EAAGA,EAAIL,EAAgBK,IAAKF,EAAWE,GAAKJ,UAAUI,EAAI,GAAGX,EAAME,SAAWO,CAAW,CAAC,GAAIT,GAASK,EAAc,IAAK,IAAIO,KAAYP,OAAc,IAAWL,EAAMY,KAAcZ,EAAMY,GAAYP,EAAaO,SAAgBZ,IAAUA,EAAQK,GAAgB,CAAC,GAAG,MAAO,CAAEQ,SAAUhB,EAAoBE,KAAMA,EAAME,SAAK,IAAWA,EAAM,KAAO,GAAKA,EAAKa,IAAK,KAAMd,MAAOA,EAAOe,OAAQ,KAAO,CASn2B,MAAMC,EAAuBhB,IAClC,MAAM,QAAEiB,EAAO,SAAEC,EAAQ,MAAEC,EAAK,IAAEC,EAAG,OAAEC,EAAM,UAAEC,EAAS,OAAEC,EAAM,SAAErB,GAAaF,EAC/E,IAAIwB,EAAsB1B,EAAK,IAAQ,CAAC,GAExC,MAAM2B,EAAiB,eAAmBvB,GAAWwB,GACxC,iBAAqBA,GAAkB,eAAmBA,EAAG,CAAET,UAASC,aAAcQ,IAGnG,GAAc,OAAVP,EAAgB,CAClB,MAAMQ,EAAgB,CACtB,CAAEC,MAAO,WAAYC,QAASV,GAC9B,CAAES,MAAO,GAAIC,QAAST,EAAMD,IAEtBW,EAAcP,EAAOQ,MAAM,KACjCP,EACA1B,EAAK,IAAqB,CAAEkC,MAAO,OAAQX,OAAQA,QAAU,EAC7DvB,EAAK,IAAU,CAAEkC,MAAgB,EAATX,EAAYA,OAAiB,EAATA,QAAc,EAC1DvB,EAAK,IAAK,CACRmC,KAAMN,EACNO,QAAS,UACTC,WAAW,EACXC,YAAaf,EACbgB,YAAaC,KAAKC,MAAe,GAATlB,GACxBmB,KAAM,UACNC,WAAY,IACZC,SAAU,EACVC,GAAItB,QAAU,EAEhBM,EAAciB,KAAI,CAACC,EAAQC,IAC3BhD,EAAK,IAAM,CAAE0C,KAAMV,EAAYgB,EAAQhB,EAAYtB,SAAWsC,MAG9DrB,EAAejB,QACfV,EAAK,IAAK,CAAC,OAAG,EACdA,EAAK,OAAQ,CACXiD,EAAG,MACHC,EAAG3B,EACH4B,IAAK,EACLC,MAAO,CAAEC,SAAa9B,EAAS,EAAZ,MACnB+B,WAAY,SACZZ,KAAMV,EAAY,SAAM,EAE1BL,KAOF,CAEA,OAAoB3B,EAAK,MAAO,CAAEuD,UAAW,cAAc/B,UAAe,EAAQE,EAAO,EAG3FR,EAAoBX,aAAe,CACjCY,aAASqC,EACThC,UAAW,GACXC,OAAQ,eACRJ,MAAO,KACPjB,SAAU,IAkBL,MAAMqD,EAAkB,CAACC,EAAOxD,KAAU,CAC/CmB,MAAO,qBAAkCqC,EAAOxD,GAChDoB,IAAKqC,OAAOzD,EAAMoB,MAAQ,IAC1BC,OAAQoC,OAAOzD,EAAMqB,SAAW,MAGlC,GAAe,IAAAqC,SAAQH,EAAvB,CAAwCvC,E","sources":["webpack://uwazi/./app/react/Markdown/components/GaugeChart.js"],"sourcesContent":["var REACT_ELEMENT_TYPE;function _jsx(type, props, key, children) {REACT_ELEMENT_TYPE || (REACT_ELEMENT_TYPE = \"function\" == typeof Symbol && Symbol.for && Symbol.for(\"react.element\") || 60103);var defaultProps = type && type.defaultProps,childrenLength = arguments.length - 3;if (props || 0 === childrenLength || (props = { children: void 0 }), 1 === childrenLength) props.children = children;else if (childrenLength > 1) {for (var childArray = new Array(childrenLength), i = 0; i < childrenLength; i++) childArray[i] = arguments[i + 3];props.children = childArray;}if (props && defaultProps) for (var propName in defaultProps) void 0 === props[propName] && (props[propName] = defaultProps[propName]);else props || (props = defaultProps || {});return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: void 0 === key ? null : \"\" + key, ref: null, props: props, _owner: null };}import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\n\nimport Loader from \"../../components/Elements/Loader\";\nimport markdownDatasets from \"../markdownDatasets\";\n\nexport const GaugeChartComponent = (props) => {\n  const { dataset, property, value, max, height, classname, colors, children } = props;\n  let output = /*#__PURE__*/_jsx(Loader, {});\n\n  const propedChildren = React.Children.map(children, (c) =>\n  /*#__PURE__*/React.isValidElement(c) ? /*#__PURE__*/React.cloneElement(c, { dataset, property }) : c);\n\n\n  if (value !== null) {\n    const formattedData = [\n    { label: 'progress', results: value },\n    { label: '', results: max - value }];\n\n    const sliceColors = colors.split(',');\n    output = /*#__PURE__*/\n    _jsx(ResponsiveContainer, { width: \"100%\", height: height }, void 0, /*#__PURE__*/\n    _jsx(PieChart, { width: height * 2, height: height * 2 }, void 0, /*#__PURE__*/\n    _jsx(Pie, {\n      data: formattedData,\n      dataKey: \"results\",\n      labelLine: false,\n      outerRadius: height,\n      innerRadius: Math.floor(height * 0.8),\n      fill: \"#8884d8\",\n      startAngle: 180,\n      endAngle: 0,\n      cy: height }, void 0,\n\n    formattedData.map((_entry, index) => /*#__PURE__*/\n    _jsx(Cell, { fill: sliceColors[index % sliceColors.length] }, index))),\n\n\n    propedChildren.length && /*#__PURE__*/\n    _jsx(\"g\", {}, void 0, /*#__PURE__*/\n    _jsx(\"text\", {\n      x: \"50%\",\n      y: height,\n      dy: -1,\n      style: { fontSize: `${height / 2}px` },\n      textAnchor: \"middle\",\n      fill: sliceColors[0] }, void 0,\n\n    propedChildren))));\n\n\n\n\n\n\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", { className: `GaugeChart ${classname}` }, void 0, output);\n};\n\nGaugeChartComponent.defaultProps = {\n  dataset: undefined,\n  classname: '',\n  colors: '#000099,#ccc',\n  value: null,\n  children: '' };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const mapStateToProps = (state, props) => ({\n  value: markdownDatasets.getMetadataValue(state, props),\n  max: Number(props.max) || 100,\n  height: Number(props.height) || 110 });\n\n\nexport default connect(mapStateToProps)(GaugeChartComponent);"],"names":["REACT_ELEMENT_TYPE","_jsx","type","props","key","children","Symbol","for","defaultProps","childrenLength","arguments","length","childArray","Array","i","propName","$$typeof","ref","_owner","GaugeChartComponent","dataset","property","value","max","height","classname","colors","output","propedChildren","c","formattedData","label","results","sliceColors","split","width","data","dataKey","labelLine","outerRadius","innerRadius","Math","floor","fill","startAngle","endAngle","cy","map","_entry","index","x","y","dy","style","fontSize","textAnchor","className","undefined","mapStateToProps","state","Number","connect"],"sourceRoot":""}