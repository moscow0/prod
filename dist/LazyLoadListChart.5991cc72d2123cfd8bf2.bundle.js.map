{"version":3,"file":"LazyLoadListChart.5991cc72d2123cfd8bf2.bundle.js","mappings":"wLAAIA,E,0GAAmB,SAASC,EAAKC,EAAMC,EAAOC,EAAKC,GAAWL,IAAuBA,EAAqB,mBAAqBM,QAAUA,OAAOC,KAAOD,OAAOC,IAAI,kBAAoB,OAAO,IAAIC,EAAeN,GAAQA,EAAKM,aAAaC,EAAiBC,UAAUC,OAAS,EAAE,GAAIR,GAAS,IAAMM,IAAmBN,EAAQ,CAAEE,cAAU,IAAW,IAAMI,EAAgBN,EAAME,SAAWA,OAAc,GAAII,EAAiB,EAAG,CAAC,IAAK,IAAIG,EAAa,IAAIC,MAAMJ,GAAiBK,EAAI,EAAGA,EAAIL,EAAgBK,IAAKF,EAAWE,GAAKJ,UAAUI,EAAI,GAAGX,EAAME,SAAWO,CAAW,CAAC,GAAIT,GAASK,EAAc,IAAK,IAAIO,KAAYP,OAAc,IAAWL,EAAMY,KAAcZ,EAAMY,GAAYP,EAAaO,SAAgBZ,IAAUA,EAAQK,GAAgB,CAAC,GAAG,MAAO,CAAEQ,SAAUhB,EAAoBE,KAAMA,EAAME,SAAK,IAAWA,EAAM,KAAO,GAAKA,EAAKa,IAAK,KAAMd,MAAOA,EAAOe,OAAQ,KAAO,CAYn2B,MAAMC,EAAsBhB,IACjC,MAAM,YAAEiB,EAAW,SAAEC,EAAQ,KAAEC,EAAI,UAAEC,EAAS,QAAEC,EAAO,QAAEC,EAAO,OAAEC,GAAWvB,EACvEwB,EAAcD,EAAOE,MAAM,KAEjC,IAAIC,EAAsB5B,EAAK,IAAQ,CAAC,GAExC,GAAIqB,EAAM,CACR,MAAMQ,EAAgB,gBACtB,wBAA8BR,EAAMD,EAAU,CAC5CD,YAAaW,QAAQX,GACrBI,UACAC,aAGF,IAAIO,EAAQ,CAAEC,QAAS,CAAC,GAExB,GAAI9B,EAAM+B,QAAS,CACjB,MAAM,EAAEC,GAAM,UAAShC,EAAM+B,QAAQE,UAAUjC,EAAM+B,QAAQG,QAAQ,MAAO,CAC1EC,mBAAmB,IAErBN,EAAQ,WAAaG,GACrBH,EAAMC,QAAUD,EAAMC,SAAW,CAAC,CACpC,CAEAJ,EACA5B,EAAK,KAAM,CAAC,OAAG,EACf6B,EAAcS,KAAI,CAACC,EAAMC,KACvB,MAAMC,EACNzC,EAAK,MAAO,CAAC,OAAG,EAChBA,EAAK,MAAO,CACV0C,UAAW,cACXC,MAAO,CAAEC,gBAAiBlB,EAAYc,EAAQd,EAAYhB,eAAa,EAEzEV,EAAK,OAAQ,CAAC,OAAG,EAAQuC,EAAKM,UAE9B7C,EAAK,OAAQ,CAAE0C,UAAW,mBAAgB,EAC1ClB,EAAU,GAAGe,EAAKO,YAAYP,EAAKQ,QAAUR,EAAKQ,QAOlD,OAFAhB,EAAMC,QAAQZ,GAAY,CAAE4B,OAAQ,CAACT,EAAKU,KAGxCjD,EAAK,KAAM,CAAC,EAAGuC,EAAKU,GACpB/C,EAAM+B,SACNjC,EAAK,IAAc,CAAEkD,IAAK,eAAe,WAAanB,KAAUT,UAAW,kBAAe,EAC1FmB,IAGCvC,EAAM+B,SAAWQ,EAAS,IAMjC,CAEA,OAAoBzC,EAAK,MAAO,CAAE0C,UAAW,aAAapB,UAAe,EAAQM,EAAO,EAG1FV,EAAmBX,aAAe,CAChCgB,QAAS,SACTJ,aAAa,EACbK,SAAS,EACTF,UAAW,GACXG,OAAQ,0CACRJ,KAAM,KACNY,QAAS,MAcJ,MAAMkB,EAAkB,CAACC,EAAOlD,KAAU,CAC/CmB,KAAM,oBAAiC+B,EAAOlD,GAC9CmD,UAAWD,EAAMC,YAGnB,GAAe,IAAAC,SAAQH,EAAvB,CAAwCjC,E","sources":["webpack://uwazi/./app/react/Markdown/components/ListChart.js"],"sourcesContent":["var REACT_ELEMENT_TYPE;function _jsx(type, props, key, children) {REACT_ELEMENT_TYPE || (REACT_ELEMENT_TYPE = \"function\" == typeof Symbol && Symbol.for && Symbol.for(\"react.element\") || 60103);var defaultProps = type && type.defaultProps,childrenLength = arguments.length - 3;if (props || 0 === childrenLength || (props = { children: void 0 }), 1 === childrenLength) props.children = children;else if (childrenLength > 1) {for (var childArray = new Array(childrenLength), i = 0; i < childrenLength; i++) childArray[i] = arguments[i + 3];props.children = childArray;}if (props && defaultProps) for (var propName in defaultProps) void 0 === props[propName] && (props[propName] = defaultProps[propName]);else props || (props = defaultProps || {});return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: void 0 === key ? null : \"\" + key, ref: null, props: props, _owner: null };}import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Immutable from 'immutable';\nimport rison from 'rison-node';\nimport qs from 'qs';\n\nimport Loader from \"../../components/Elements/Loader\";\nimport { arrayUtils } from \"../../Charts\";\nimport MarkdownLink from \"./MarkdownLink\";\nimport markdownDatasets from \"../markdownDatasets\";\n\nexport const ListChartComponent = (props) => {\n  const { excludeZero, property, data, classname, context, scatter, colors } = props;\n  const sliceColors = colors.split(',');\n\n  let output = /*#__PURE__*/_jsx(Loader, {});\n\n  if (data) {\n    const formattedData = arrayUtils.sortValues(\n    arrayUtils.formatDataForChart(data, property, {\n      excludeZero: Boolean(excludeZero),\n      context,\n      scatter }));\n\n\n    let query = { filters: {} };\n\n    if (props.baseUrl) {\n      const { q } = qs.parse(props.baseUrl.substring(props.baseUrl.indexOf('?')), {\n        ignoreQueryPrefix: true });\n\n      query = rison.decode(q);\n      query.filters = query.filters || {};\n    }\n\n    output = /*#__PURE__*/\n    _jsx(\"ul\", {}, void 0,\n    formattedData.map((item, index) => {\n      const Content = /*#__PURE__*/\n      _jsx(\"div\", {}, void 0, /*#__PURE__*/\n      _jsx(\"div\", {\n        className: \"list-bullet\",\n        style: { backgroundColor: sliceColors[index % sliceColors.length] } }, void 0, /*#__PURE__*/\n\n      _jsx(\"span\", {}, void 0, item.results)), /*#__PURE__*/\n\n      _jsx(\"span\", { className: \"list-label\" }, void 0,\n      scatter ? `${item.parent} - ${item.label}` : item.label));\n\n\n\n\n      query.filters[property] = { values: [item.id] };\n\n      return /*#__PURE__*/(\n        _jsx(\"li\", {}, item.id,\n        props.baseUrl && /*#__PURE__*/\n        _jsx(MarkdownLink, { url: `/library/?q=${rison.encode(query)}`, classname: \"list-link\" }, void 0,\n        Content),\n\n\n        !props.baseUrl && Content));\n\n\n    }));\n\n\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", { className: `ListChart ${classname}` }, void 0, output);\n};\n\nListChartComponent.defaultProps = {\n  context: 'System',\n  excludeZero: false,\n  scatter: false,\n  classname: '',\n  colors: '#ffcc00,#ffd633,#ffe066,#ffeb99,#fff5cc',\n  data: null,\n  baseUrl: null };\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const mapStateToProps = (state, props) => ({\n  data: markdownDatasets.getAggregations(state, props),\n  thesauris: state.thesauris });\n\n\nexport default connect(mapStateToProps)(ListChartComponent);"],"names":["REACT_ELEMENT_TYPE","_jsx","type","props","key","children","Symbol","for","defaultProps","childrenLength","arguments","length","childArray","Array","i","propName","$$typeof","ref","_owner","ListChartComponent","excludeZero","property","data","classname","context","scatter","colors","sliceColors","split","output","formattedData","Boolean","query","filters","baseUrl","q","substring","indexOf","ignoreQueryPrefix","map","item","index","Content","className","style","backgroundColor","results","parent","label","values","id","url","mapStateToProps","state","thesauris","connect"],"sourceRoot":""}