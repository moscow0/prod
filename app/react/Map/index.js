"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.LMap = void 0;Object.defineProperty(exports, "Map", { enumerable: true, get: function () {return _MapContainer.Map;} });Object.defineProperty(exports, "Markers", { enumerable: true, get: function () {return _Markers.default;} });exports.helper = void 0;var _component = _interopRequireDefault(require("@loadable/component"));
var _react = _interopRequireDefault(require("react"));
var _MapContainer = require("./MapContainer");
var helper = _interopRequireWildcard(require("./helper"));exports.helper = helper;






var _Markers = _interopRequireDefault(require("./Markers.js"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function (nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}const LMap = (0, _component.default)(async () => {const { LMap: LMapComponent } = await Promise.resolve().then(() => _interopRequireWildcard(require("./LMap.tsx")));return (props) => /*#__PURE__*/_react.default.createElement(LMapComponent, props);});exports.LMap = LMap;